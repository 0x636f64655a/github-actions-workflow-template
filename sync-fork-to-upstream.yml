name: Sync all branches
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  retrieve-upstream-info:
    outputs:
      upstream_owner: ${{ steps.get-info.outputs.upstream_owner }}
      upstream_repo: ${{ steps.get-info.outputs.upstream_repo }}
    steps:
      - name: Get upstream repository info via API
        id: get-info
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}")
          
          UPSTREAM_OWNER=$(echo "$RESPONSE" | jq -r '.parent.owner.login // empty')
          UPSTREAM_REPO=$(echo "$RESPONSE" | jq -r '.parent.full_name // empty')
      
          if [[ -z "$UPSTREAM_OWNER" || -z "$UPSTREAM_REPO" ]]; then
            echo "This repository is not a fork."
            exit 1
          else
            echo "upstream_owner=$UPSTREAM_OWNER" >> "$GITHUB_OUTPUT"
            echo "upstream_repo=$UPSTREAM_REPO" >> "$GITHUB_OUTPUT"
          fi

  generate-matrix:
    name: Generate matrix of branches
    runs-on: ubuntu-latest
    needs: retrieve-upstream-info
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix of branches
        id: set-matrix
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_UPSTREAM_REPOSITORY: ${{ needs.retrieve-upstream-info.outputs.upstream_owner }}/${{ needs.retrieve-upstream-info.outputs.upstream_repo }}
        run: |
          upstream_repo="https://${GITHUB_ACTOR}:${INPUT_GITHUB_TOKEN}@github.com/${INPUT_UPSTREAM_REPOSITORY}.git"

          # these jq scripts will produce the same matrix jobs by default
          # choose the one that works for any additional values that you may need to build your matrix with
          jq_script='{ "branch": [inputs | split("\n") | .[] | gsub(".*refs/heads/"; "")] }'   # {"branch":["$branch_name_1","$branch_name_2"]}
          # jq_script='[inputs | split("\n") | .[] | gsub(".*refs/heads/"; "") | { "branch": . }]' # [{"branch":"$branch_name_1"},{"branch":"$branch_name_2"}]

          JSON="$(git ls-remote --heads "$upstream_repo" | jq -McnR "$jq_script")"

          # debug matrix pretty json formatted output
          jq --monochrome-output . -- <<< "$JSON"

          # set output variable named 'matrix' for use in subsequent jobs that 'needs' this job.
          # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
          echo "matrix=$JSON" >> "$GITHUB_OUTPUT"

  sync_fork:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: TobKed/github-forks-sync-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_repository: ${{ needs.retrieve-upstream-info.outputs.upstream_owner }}/${{ needs.retrieve-upstream-info.outputs.upstream_repo }}
          target_repository: ${{ github.repository }}
          upstream_branch: ${{ matrix.branch }}
          target_branch: ${{ matrix.branch }}
          force: true
          tags: true
